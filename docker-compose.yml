services:
  redis:
    image: redis:alpine

  backend:
    build:
      context: ./backend
      target: ${ENV}
    volumes:
      - ./backend:/usr/src/app
      - ./backend/db.sqlite3:/usr/src/app/db.sqlite3
    ports:
      - "8000:8000"
    env_file:
      - path: ${ENV_FILE:-.env}
    depends_on:
      - redis

  celery:
    build: ./backend
    command: python manage.py celery_worker
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - path: ${ENV_FILE:-.env}
    depends_on:
      - redis

  celery-beat:
    build: ./backend
    command: celery -A config beat -l info
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - path: ${ENV_FILE:-.env}
    depends_on:
      - redis

  frontend:
    build:
      context: ./frontend
      target: ${ENV}
      args:
        API_URL: ${BACKEND_URL}
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - path: ${ENV_FILE:-.env}
    depends_on:
      - backend